name: Rust Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin: onelist
            name: onelist-Linux-x86_64
            cmd: cross

          - release_for: Linux-arm64
            target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            bin: onelist
            name: onelist-Linux-arm64
            cmd: cross

          - release_for: Windows-x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: onelist.exe
            name: onelist-Windows-x86_64
            cmd: cargo

          - release_for: Windows-arm64
            target: aarch64-pc-windows-msvc
            os: windows-latest
            bin: onelist.exe
            name: onelist-Windows-arm64
            cmd: cargo

    runs-on: ${{ matrix.platform.os }}
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/yarn
            ui/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install UI dependencies
        run: yarn config set registry https://registry.npmjs.org && yarn install
        working-directory: ui

      - name: Build UI
        run: yarn build
        working-directory: ui

      - name: Cache Cross (Linux only)
        if: matrix.platform.os == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cross
          key: ${{ runner.os }}-cross-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cross-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Cross if not cached (Linux only)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          if [ ! -f ~/.cargo/bin/cross ]; then
            cargo install cross
          fi

      - name: Set up NASM
        if: matrix.platform.os == 'windows-latest'
        uses: ilammy/setup-nasm@v1.5.1
      - name: Install  ninja (Windows only)
        if: matrix.platform.os == 'windows-latest'
        run: choco install ninja

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ matrix.platform.target }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.platform.target }}-

      - name: Build binary
        run: ${{ matrix.platform.cmd }} build --release --target ${{ matrix.platform.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
